@model PaginatedList<web.Models.Avtor>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Isci: <input type="text" name="SearchString" value='@ViewData["CurrentFilter"]' />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Prikaži vse</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder='@ViewData["ImeSortParm"]' asp-route-currentFilter='@ViewData["CurrentFilter"]'>Ime</a>
                @* <a asp-action="Index" asp-route-sortOrder='@ViewData["ImeSortParm"]'>@Html.DisplayNameFor(model => model.Ime)</a> *@
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder='@ViewData["PriimekSortParm"]' asp-route-currentFilter='@ViewData["CurrentFilter"]'>Priimek</a>
                @* <a asp-action="Index" asp-route-sortOrder='@ViewData["PriimekSortParm"]'>@Html.DisplayNameFor(model => model.Priimek)</a> *@
            </th>
            <th>
                @* @Html.DisplayNameFor(model => model.Opis) *@
                Opis
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Ime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Priimek)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Opis)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.AvtorID">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.AvtorID">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.AvtorID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder='@ViewData["CurrentSort"]'
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter='@ViewData["CurrentFilter"]'
   class="btn btn-default @prevDisabled">
    Prejšnja
</a>
<a asp-action="Index"
   asp-route-sortOrder='@ViewData["CurrentSort"]'
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter='@ViewData["CurrentFilter"]'
   class="btn btn-default @nextDisabled">
    Naslednja
</a>